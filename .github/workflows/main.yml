name: Ruby Gem

on:
  push:
    branches: ["main"]
    tags:
      - "v*"
  pull_request:
    branches: ["main"]

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    permissions:
      contents: read
    strategy:
      matrix:
        ruby-version: ["3.3"]
        rails-version: ["6","7", "8"]
      fail-fast: false
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v3
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby-version }}
          bundler-cache: true
      - name: Install dependencies
        run: |
          bundle config path vendor/bundle
          BUNDLE_GEMFILE=gemfiles/Gemfile.rails${{ matrix.rails-version }} bundle install
      - name: Run tests
        run: |
          BUNDLE_GEMFILE=gemfiles/Gemfile.rails${{ matrix.rails-version }} bundle exec rake test

  build:
    name: Build + Publish
    needs: test
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.3
          bundler-cache: true
      - name: Prepare for publishing
        run: |
          mkdir -p $HOME/.gem
          touch $HOME/.gem/credentials
          chmod 0600 $HOME/.gem/credentials
          printf -- "---\n:rubygems_api_key: ${GEM_HOST_API_KEY}\n" > $HOME/.gem/credentials
      - name: Build and publish
        run: |
          gem build *.gemspec
          gem push *.gem
        env:
          GEM_HOST_API_KEY: "${{secrets.RUBYGEMS_AUTH_TOKEN}}"

  documentation:
    name: Generate and Deploy Documentation
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      # Add this step first to clean up any existing artifacts
      - name: Delete existing artifacts
        uses: geekyeggo/delete-artifact@v2
        with:
          name: github-pages
          failOnError: false

      - uses: actions/checkout@v3
      
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.3
          bundler-cache: true
      
      - name: Install RDoc
        run: gem install rdoc
      
      - name: Generate Documentation
        run: |
          # Clean and create docs directory
          rm -rf docs
          mkdir -p docs
          
          # Generate RDoc documentation
          rdoc --output docs \
              --force-update \
              lib/**/*.rb \
              README.md CHANGELOG.md LICENSE.txt
          
          # Handle index.html
          if [ -f docs/README_md.html ]; then
            cp docs/README_md.html docs/index.html
          elif [ -f docs/table_of_contents.html ]; then
            cp docs/table_of_contents.html docs/index.html
          else
            cat > docs/index.html << EOL
              <!DOCTYPE html>
              <html>
                <head>
                  <title>CalInvite - Calendar Invite Generator by DashAPI</title>
                </head>
                <body>
                  <h1>CalInvite Documentation</h1>
                  <p>Welcome to the CalInvite documentation.</p>
                  <p><a href="table_of_contents.html">Table of Contents</a></p>
                </body>
              </html>
              EOL
          fi
          
          # Debug output
          echo "Documentation directory contents:"
          ls -la docs/
      
      - name: Setup Pages
        uses: actions/configure-pages@v4
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'docs'
          name: github-pages
          retention-days: 1
      
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4